plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6' apply false
	id 'io.spring.dependency-management' version '1.1.7' apply false
}

group = 'com.suhoi'
version = '0.0.1-SNAPSHOT'
description = 'CryptoPlatform (multi-module)'

ext {
	versions = [
			junit   : '5.10.3'
	]
}

allprojects {
	repositories { mavenCentral() }
}

subprojects {
	apply plugin: 'java'
	java { toolchain { languageVersion = JavaLanguageVersion.of(21) } }
	tasks.withType(Test).configureEach { useJUnitPlatform() }
}

/**
 * Библиотечные модули (core + adapters) — без Spring Boot
 */
configure([
		project(':modules:core'),
		project(':modules:adapters:binance-adapter'),
		project(':modules:adapters:bybit-adapter'),
		project(':modules:adapters:bitget-adapter'),
		project(':modules:adapters:gate-adapter'),
		project(':modules:adapters:mexc-adapter'),
		project(':modules:adapters:dexscreener-adapter')
]) {
	apply plugin: 'java-library'
	dependencies {
		testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junit}"
		testRuntimeOnly  "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
	}
}

/**
 * Приложения (Spring Boot сервисы)
 */
def appModules = [
		project(':modules:discovery-service'),
		project(':modules:stream-router'),
		project(':modules:fairprice-service'),
		project(':modules:bias-service'),
		project(':modules:detector-service'),
		project(':modules:notifier-service'),
		project(':modules:api-service')
]

configure(appModules) {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	dependencies {
		implementation project(':modules:core')
		implementation 'org.springframework.boot:spring-boot-starter'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}
}
ext {
	springDotenv = 'me.paulschwarz:spring-dotenv:4.0.0'
}

// Подключаем dotenv ТОЛЬКО к подпроектам, где применён плагин Spring Boot
subprojects { subproj ->
	plugins.withId('org.springframework.boot') {
		subproj.dependencies {
			implementation springDotenv
		}
	}
}
//tasks.named('build').configure {
//	dependsOn ':modules:adapters:mexc-adapter:generateProto'
//}

